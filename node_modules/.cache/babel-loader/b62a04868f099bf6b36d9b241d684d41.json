{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\eranl\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\benefixMe\\\\frontend\\\\src\\\\cmp\\\\Select.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { getClubsList, addSelectedClubs, checkConnection, getUserLoggedIn } from '../actions/UserAction';\nimport '../style/css/select.css';\n\nclass Select extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedClubs: [],\n      clubs: [],\n      isLogIn: false\n    };\n\n    this.getClubs = async () => {\n      await this.props.getClubsList();\n      await this.setState({\n        clubs: this.props.clubs\n      });\n      await this.handleStartChangeSelected();\n    };\n\n    this.handleStartChangeSelected = async () => {\n      if (this.state.selectedClubs.length > 0) {\n        var difference = [];\n        let isClubExist = false;\n\n        for (let i = 0; i < this.state.clubs.length; i++) {\n          for (let j = 0; j < this.state.selectedClubs.length; j++) {\n            if (this.state.clubs[i].club_id === this.state.selectedClubs[j].club_id) {\n              isClubExist = true;\n              break;\n            }\n          }\n\n          if (isClubExist === false) {\n            difference.push(this.state.clubs[i]);\n          }\n\n          isClubExist = false;\n        }\n\n        console.log(\"difference\", difference);\n        await this.setState({\n          clubs: difference\n        });\n      }\n    };\n\n    this.handleChangeSelected = async event => {\n      if (event.target.value !== \"-1\") {\n        let selectedObj = {};\n        selectedObj = this.props.clubs.filter(item => {\n          return item.name === event.target.value;\n        });\n        await this.setState({\n          selectedClubs: [...this.state.selectedClubs, selectedObj[0]]\n        });\n        await this.setState({\n          clubs: this.state.clubs.filter(item => {\n            return item.name !== event.target.value;\n          })\n        });\n        await this.props.addSelectedClubs(this.state.selectedClubs);\n      }\n    };\n\n    this.cencelSelecterClab = async event => {\n      this.setState({\n        selectedClubs: this.state.selectedClubs.filter(item => {\n          return item.name !== event.target.id;\n        })\n      });\n      let selectedObj = {};\n      selectedObj = this.props.clubs.filter(item => {\n        return item.name === event.target.id;\n      });\n      await this.setState({\n        clubs: [...this.state.clubs, selectedObj[0]]\n      });\n      await this.props.addSelectedClubs(this.state.selectedClubs);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Typical usage (don't forget to compare props):\n    let connection = checkConnection();\n\n    if (connection !== prevState.isLogIn && connection === true) {\n      this.setState({\n        isLogIn: true\n      });\n      let user = sessionStorage.getItem('auth');\n      user = JSON.parse(user);\n\n      if (user.selectedClubs !== null) {\n        this.setState({\n          isLogin: user.firstName\n        });\n\n        if (user.selectedClubs) {\n          this.setState({\n            selectedClubs: [...user.selectedClubs]\n          }); // this.setState({isLogin:true})\n\n          this.props.addSelectedClubs([...user.selectedClubs]);\n          this.getClubs(); // this.handleStartChangeSelected();\n        }\n      }\n    } else if (connection !== prevState.isLogIn && !this.props.loggedInUser) {\n      this.setState({\n        isLogIn: false\n      });\n      this.setState({\n        selectedClubs: []\n      });\n      this.getClubs();\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    if (sessionStorage.getItem('auth') !== null) {\n      console.log(\"componentDidMount\", sessionStorage.getItem('auth'));\n      let user = sessionStorage.getItem('auth');\n      user = JSON.parse(user);\n\n      if (user.selectedClubs !== null) {\n        this.setState({\n          isLogin: user.firstName\n        });\n\n        if (user.selectedClubs) {\n          // this.getClubs()\n          this.setState({\n            selectedClubs: [...user.selectedClubs]\n          });\n          this.setState({\n            isLogin: true\n          });\n          this.props.addSelectedClubs([...user.selectedClubs]);\n        }\n      }\n    } else {\n      this.getClubs();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"club-list\",\n          className: \"selected-club \",\n          list: \"club-list\",\n          type: \"text\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select select-clab \",\n            name: \"club-list\",\n            id: \"club-list\",\n            onChange: this.handleChangeSelected,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"\\u05D1\\u05D7\\u05E8 \\u05DE\\u05D5\\u05E2\\u05D3\\u05D5\\u05DF \\u05DE\\u05D4\\u05E8\\u05E9\\u05D9\\u05DE\\u05D4 \"\n            }, \"-1\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), this.state.clubs && this.state.clubs.map(function (item, i) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                id: item,\n                value: item.name,\n                children: item.name\n              }, \"option\" + item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 44\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-txt\",\n          type: \"text\",\n          children: \"\\u05DE\\u05D5\\u05E2\\u05D3\\u05D5\\u05E0\\u05D9\\u05DD \\u05E9\\u05D1\\u05D7\\u05E8\\u05EA\\u05D9 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"line\",\n          type: \"text\",\n          value: this.state.selectedClubs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.selectedClubs && this.state.selectedClubs.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-selected-club\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: this.cencelSelecterClab,\n              id: item.name,\n              className: \" material-icons close-small-btn\",\n              children: \"close\"\n            }, \"i\" + item.club_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-courses\",\n              children: item.name\n            }, \"li\" + item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this)]\n          }, item.club_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  clubs: state.user.clubs,\n  selectedClubs: state.user.selectedClubs,\n  loggedInUser: state.user.loggedInUser\n});\n\nconst mapDispatchToProps = {\n  getClubsList,\n  addSelectedClubs,\n  checkConnection,\n  getUserLoggedIn\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Select));","map":{"version":3,"sources":["C:/Users/eranl/OneDrive/שולחן העבודה/benefixMe/frontend/src/cmp/Select.js"],"names":["React","Component","connect","withRouter","getClubsList","addSelectedClubs","checkConnection","getUserLoggedIn","Select","state","selectedClubs","clubs","isLogIn","getClubs","props","setState","handleStartChangeSelected","length","difference","isClubExist","i","j","club_id","push","console","log","handleChangeSelected","event","target","value","selectedObj","filter","item","name","cencelSelecterClab","id","componentDidUpdate","prevProps","prevState","connection","user","sessionStorage","getItem","JSON","parse","isLogin","firstName","loggedInUser","componentDidMount","render","map","index","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { getClubsList,addSelectedClubs, checkConnection ,getUserLoggedIn} from '../actions/UserAction';\r\n\r\nimport '../style/css/select.css'\r\n\r\nclass Select extends Component {\r\n    state= {\r\n        selectedClubs:[],\r\n        clubs:[],\r\n        isLogIn:false\r\n        \r\n    }\r\n    componentDidUpdate(prevProps,prevState) {\r\n        // Typical usage (don't forget to compare props):\r\n        \r\n        let connection = checkConnection(); \r\n        if (connection !== prevState.isLogIn && connection === true ) {\r\n            this.setState({isLogIn:true})\r\n            let user = sessionStorage.getItem('auth'); \r\n            user = JSON.parse(user)\r\n            if(user.selectedClubs !==null){\r\n                this.setState({isLogin:user.firstName})\r\n                if (user.selectedClubs){\r\n                    \r\n                    this.setState({selectedClubs:[...user.selectedClubs]})\r\n                    // this.setState({isLogin:true})\r\n                    this.props.addSelectedClubs([...user.selectedClubs]);\r\n                    this.getClubs();\r\n\r\n                    // this.handleStartChangeSelected();\r\n                }\r\n            }\r\n        }else if (connection !== prevState.isLogIn && !this.props.loggedInUser ) {\r\n            this.setState({isLogIn:false});\r\n            this.setState({selectedClubs:[]});\r\n            this.getClubs();\r\n\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n        console.log(\"componentDidMount\")\r\n        if(sessionStorage.getItem('auth')!==null){\r\n            \r\n            console.log(\"componentDidMount\",sessionStorage.getItem('auth'))\r\n            let user = sessionStorage.getItem('auth'); \r\n            user = JSON.parse(user)\r\n            if(user.selectedClubs !==null){\r\n                this.setState({isLogin:user.firstName})\r\n                if (user.selectedClubs){\r\n                    \r\n                        // this.getClubs()\r\n                        this.setState({selectedClubs:[...user.selectedClubs]})\r\n                        this.setState({isLogin:true})\r\n                        this.props.addSelectedClubs([...user.selectedClubs]);\r\n                }\r\n            }\r\n        }else{\r\n            this.getClubs()\r\n        }\r\n            \r\n    }\r\n        \r\n        \r\n    getClubs = async ()  =>{\r\n            await this.props.getClubsList()\r\n            await this.setState({ clubs: this.props.clubs });\r\n            await this.handleStartChangeSelected()\r\n    }\r\n    \r\n    handleStartChangeSelected = async() =>{\r\n        if (this.state.selectedClubs.length > 0 ){\r\n\r\n            var difference = [];\r\n            let isClubExist = false ; \r\n            for(let i = 0 ; i < this.state.clubs.length ; i++ ){\r\n\r\n                for(let j = 0 ;  j < this.state.selectedClubs.length ; j ++ ){\r\n                    if (this.state.clubs[i].club_id === this.state.selectedClubs[j].club_id){\r\n                        isClubExist = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isClubExist === false ){\r\n                    difference.push(this.state.clubs[i]);\r\n                }\r\n                isClubExist = false;\r\n            }\r\n            console.log( \"difference\",difference);\r\n            await this.setState({clubs: difference });\r\n        }\r\n    }\r\n\r\n    handleChangeSelected = async event => {\r\n        if (event.target.value !== \"-1\"){\r\n\r\n            let selectedObj  = {}\r\n            selectedObj = this.props.clubs.filter(item =>{\r\n                return item.name === event.target.value\r\n            });\r\n           await this.setState({ selectedClubs: [...this.state.selectedClubs, selectedObj[0]] }); \r\n           await this.setState({\r\n                clubs: this.state.clubs.filter(item =>{ \r\n                    return  item.name !== event.target.value\r\n                })\r\n           });\r\n            await this.props.addSelectedClubs(this.state.selectedClubs);\r\n        }\r\n    }\r\n    \r\n    cencelSelecterClab = async event => {\r\n        \r\n        this.setState({\r\n            selectedClubs: this.state.selectedClubs.filter(item =>{ \r\n                return  item.name !== event.target.id\r\n            })\r\n        })\r\n        \r\n        let selectedObj  = {}\r\n        selectedObj = this.props.clubs.filter(item =>{\r\n            return item.name === event.target.id\r\n        })\r\n        await this.setState({ clubs: [...this.state.clubs, selectedObj[0]] }) \r\n        await this.props.addSelectedClubs(this.state.selectedClubs);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"selected\">\r\n\r\n                    <label htmlFor=\"club-list\" className=\"selected-club \"  list=\"club-list\" type='text'>\r\n                        <select className = \"select select-clab \"  name=\"club-list\" id=\"club-list\" onChange={this.handleChangeSelected}>\r\n                            <option key ={\"-1\"} >בחר מועדון מהרשימה </option>\r\n                            {this.state.clubs &&\r\n                                this.state.clubs.map(function(item, i){\r\n                                    return <option key ={\"option\"+item.id} id = {item} value = {item.name} >{item.name}</option>\r\n                                })\r\n                            } \r\n                        </select>\r\n                    </label>\r\n                        <label  className=\"label-txt\" type='text' >מועדונים שבחרתי </label>\r\n                        <label  className=\"line\" type='text' value={this.state.selectedClubs} ></label>\r\n                        <ul>\r\n                            {this.state.selectedClubs && this.state.selectedClubs.map((item ,index)  => (\r\n                                <div className=\"user-selected-club\" key={item.club_id}>\r\n                                    <i onClick={this.cencelSelecterClab}  key={\"i\"+item.club_id} id={item.name} className=\" material-icons close-small-btn\">close</i>\r\n                                    <li className = \"list-courses\" key={\"li\"+item.id}>{item.name}</li>                                    \r\n                                </div>\r\n                            ))}\r\n                        </ul>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    clubs: state.user.clubs,\r\n    selectedClubs: state.user.selectedClubs,\r\n    loggedInUser: state.user.loggedInUser,\r\n\r\n    \r\n  });\r\n\r\nconst mapDispatchToProps = {\r\n    getClubsList,\r\n    addSelectedClubs,\r\n    checkConnection,\r\n    getUserLoggedIn,\r\n  };\r\n  \r\nexport default  withRouter(connect(mapStateToProps, mapDispatchToProps)(Select))"]},"metadata":{},"sourceType":"module"}