{"ast":null,"code":"import UserService from '../services/UserService';\nimport { loading, doneLoading } from './SystemActions'; // import history from './../history';\n\nexport function login(credentails) {\n  return async dispatch => {\n    const user = await UserService.login(credentails);\n    console.log(\"login\", user);\n\n    if (user.status === \"OK\") {\n      dispatch(_setUser(user));\n    }\n  };\n}\nexport function checkConnection() {\n  return UserService.checkConnection();\n}\nexport function getUserLoggedIn() {\n  return async dispatch => {\n    const user = await UserService.getUserLoggedIn();\n    dispatch(_setUser(user));\n  };\n}\nexport function signup(credentails) {\n  return async dispatch => {\n    const user = await UserService.signup(credentails);\n    console.log(\"signup\", user);\n\n    if (user.status === \"OK\") {\n      dispatch(_addUser(user));\n    }\n  };\n}\nexport function saveUser(credentails) {\n  return async dispatch => {\n    const user = await UserService.saveEditedUser(credentails);\n    console.log(\"saveUser\", user);\n\n    if (user.status === \"OK\") {\n      dispatch(_setUser(credentails)); // login(credentails)\n    }\n  };\n}\nexport function getClubsList() {\n  return async dispatch => {\n    const clubs = await UserService.getClubsList();\n    dispatch(_addClubs(clubs));\n  };\n}\nexport function addSelectedClubs(clubs) {\n  return async dispatch => {\n    // const clubs = await UserService.getClubsList();\n    dispatch(_addSelectedClubs(clubs));\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    await UserService.logout();\n    dispatch(_setUser(null));\n  };\n}\nexport function getById() {\n  return async dispatch => {\n    try {\n      dispatch(loading());\n      const user = await UserService.getById();\n      dispatch(_setUser(user));\n    } catch (err) {// console.log('UserActions: ERROR in getById', err);\n      // example for rerouting - after changing the store\n      // history.push('/some/path');\n    } finally {\n      dispatch(doneLoading());\n    }\n  };\n}\n\nfunction _setUser(user) {\n  return {\n    type: 'SET',\n    user\n  };\n}\n\nfunction _addUser(user) {\n  return {\n    type: 'ADD',\n    user\n  };\n}\n\nfunction _addClubs(clubs) {\n  return {\n    type: 'ADD_CLUBS',\n    clubs\n  };\n}\n\nfunction _addSelectedClubs(selectedClubs) {\n  return {\n    type: 'ADD_SELECTED_CLUBS',\n    selectedClubs\n  };\n}\n\nexport default {\n  login,\n  logout,\n  signup,\n  getById,\n  getClubsList,\n  checkConnection,\n  getUserLoggedIn,\n  addSelectedClubs\n};","map":{"version":3,"sources":["C:/Users/eranl/OneDrive/שולחן העבודה/benefixMe/frontend/src/actions/UserAction.js"],"names":["UserService","loading","doneLoading","login","credentails","dispatch","user","console","log","status","_setUser","checkConnection","getUserLoggedIn","signup","_addUser","saveUser","saveEditedUser","getClubsList","clubs","_addClubs","addSelectedClubs","_addSelectedClubs","logout","getById","err","type","selectedClubs"],"mappings":"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","sourcesContent":["import UserService from '../services/UserService';\r\nimport { loading, doneLoading } from './SystemActions';\r\n// import history from './../history';\r\n\r\nexport function login(credentails) {\r\n  return async dispatch => {\r\n    const user = await UserService.login(credentails);\r\n    console.log(\"login\",user)\r\n    if (user.status === \"OK\" ){\r\n      dispatch(_setUser(user));\r\n    } \r\n  };\r\n}\r\n\r\nexport function checkConnection() {\r\n  return UserService.checkConnection();\r\n}\r\n\r\nexport function getUserLoggedIn() {\r\n  return async dispatch => {\r\n    const user = await  UserService.getUserLoggedIn();\r\n    \r\n    dispatch(_setUser(user))\r\n  }\r\n  \r\n}\r\n\r\nexport function signup(credentails) {\r\n  return async dispatch => {\r\n    const user = await UserService.signup(credentails);\r\n    console.log(\"signup\",user)\r\n    if(user.status === \"OK\"){\r\n      dispatch(_addUser(user));\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport function saveUser(credentails) {\r\n  return async dispatch => {\r\n    const user = await UserService.saveEditedUser(credentails);\r\n    console.log(\"saveUser\",user)\r\n    if(user.status === \"OK\"){\r\n      dispatch(_setUser(credentails));\r\n      // login(credentails)\r\n    }\r\n  };\r\n}\r\n\r\nexport function  getClubsList () {\r\n  return async dispatch => {\r\n    const clubs = await UserService.getClubsList();\r\n    dispatch(_addClubs(clubs));\r\n  };\r\n}\r\nexport function  addSelectedClubs (clubs) {\r\n  return async dispatch => {\r\n    // const clubs = await UserService.getClubsList();\r\n    dispatch(_addSelectedClubs(clubs));\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    await UserService.logout();\r\n    dispatch(_setUser(null));\r\n  };\r\n}\r\n\r\nexport function getById() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(loading());\r\n      const user = await UserService.getById();\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      // console.log('UserActions: ERROR in getById', err);\r\n      // example for rerouting - after changing the store\r\n      // history.push('/some/path');\r\n    } finally {\r\n      dispatch(doneLoading());\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setUser(user) {\r\n  return {\r\n    type: 'SET',\r\n    user,\r\n  };\r\n}\r\n\r\nfunction _addUser(user) {\r\n  return {\r\n    type: 'ADD',\r\n    user,\r\n  };\r\n}\r\n\r\nfunction _addClubs(clubs){\r\n  return {\r\n    type:'ADD_CLUBS',\r\n    clubs,\r\n  }\r\n}\r\n\r\nfunction _addSelectedClubs(selectedClubs){\r\n  return {\r\n    type:'ADD_SELECTED_CLUBS',\r\n    selectedClubs,\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getById,\r\n  getClubsList,\r\n  checkConnection,\r\n  getUserLoggedIn,\r\n  addSelectedClubs,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}